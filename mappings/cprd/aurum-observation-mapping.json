{
  "id": "aurum-observation-mapping",
  "url": "https://ai4hf.eu/fhir/mappings/cprd/aurum-observation-mapping",
  "name": "aurum-observation-mapping",
  "title": "The mapping of Aurum Observation data into several AI4HF profiles.",
  "isDraft": false,
  "source": [
    {
      "alias": "observation",
      "url": "https://ai4hf.eu/fhir/schemas/cprd/Aurum-observation",
      "joinOn": [
        "patid"
      ]
    },
    {
      "alias": "linkageEligibility",
      "url": "https://ai4hf.eu/fhir/schemas/cprd/Linkage-eligibility",
      "joinOn": [
        "patid"
      ]
    },
    {
      "alias": "encounter",
      "url": "https://ai4hf.eu/fhir/schemas/cprd/Hes-hospitalization",
      "joinOn": [
        "patid"
      ]
    }
  ],
  "context": {
    "vitalSignContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-vital-sign-code-mapping.csv"
    },
    "nyhaContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-nyha-code-mapping.csv"
    },
    "smokingContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-smoking-code-mapping.csv"
    },
    "ejectionFractionMap": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-ef-range-mapping.csv"
    },
    "symptomContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-symptom-code-mapping.csv"
    },
    "conditionContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-condition-code-mapping.csv"
    },
    "labResultContext": {
      "category": "concept-map",
      "url": "$CONTEXT_REPO/cprd/aurum-lab-result-code-mapping.csv"
    }
  },
  "variable": [
    {
      "name": "conditionCodes",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%conditionContext, medcodeid) "
    },
    {
      "name": "isCondition",
      "language": "text/fhirpath",
      "expression": " %conditionCodes.exists() and patid.exists() and obsdate.exists() and obsid.exists() "
    },
    {
      "name": "encounterReference",
      "language": "text/fhirpath",
      "expression": "iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})"
    },
    {
      "name": "smokingStatus",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%smokingContext, medcodeid) "
    },
    {
      "name": "labResultCodes",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%labResultContext, medcodeid) "
    },
    {
      "name": "vitalSignCode",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%vitalSignContext, medcodeid) "
    },
    {
      "name": "symptomCode",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%symptomContext, medcodeid) "
    },
    {
      "name": "nyhaCode",
      "language": "text/fhirpath",
      "expression": " mpp:getConcept(%nyhaContext, medcodeid) "
    }
  ],
  "mapping": [
    {
      "description": "AI4HF Condition Resource",
      "precondition": {
        "name": "isCondition",
        "language": "text/fhirpath",
        "expression": " %isCondition = true "
      },
      "expression": {
        "name": "condition",
        "language": "application/fhir-template+json",
        "value": {
          "{{#conditionCode}}": "{{%conditionCodes}}",
          "{{*}}": {
            "id": "{{mpp:getHashedId('Condition', obsid & %conditionCode.target_code)}}",
            "meta": {
              "profile": [
                "https://datatools4heart.eu/fhir/StructureDefinition/HFR-Condition"
              ]
            },
            "resourceType": "Condition",
            "code": {
              "coding": [
                {
                  "code": "{{ %conditionCode.target_code }}",
                  "system": "http://hl7.org/fhir/sid/icd-10",
                  "display": "{{ %conditionCode.target_name }}",
                  "@sliceName": "icd10Code"
                }
              ]
            },
            "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
            "encounter": "{{? %encounterReference}}",
            "onsetDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
            "identifier": [
              {
                "value": "{{ obsid & '-' & %conditionCode.target_code }}"
              }
            ],
            "clinicalStatus": {
              "coding": [
                {
                  "code": "active",
                  "system": "http://hl7.org/fhir/ValueSet/condition-clinical",
                  "display": "Active"
                }
              ]
            },
            "category": [
              {
                "{{#ref}}": "{{%encounterReference}}",
                "{{?}}": {
                  "coding": [
                    "{{utl:createFhirCoding('http://terminology.hl7.org/CodeSystem/condition-category', 'encounter-diagnosis', 'Encounter Diagnosis')}}"
                  ]
                }
              }
            ]
          }
        }
      }
    },
    {
      "description": "AI4HF Echocardiograph Resource",
      "precondition": {
        "name": "isCondition",
        "language": "text/fhirpath",
        "expression": " %isCondition = true "
      },
      "expression": {
        "name": "echo-ef-mapping",
        "language": "application/fhir-template+json",
        "value": {
          "id": "{{mpp:getHashedId('Condition', obsid & 'echo')}}",
          "meta": {
            "profile": [
              "https://datatools4heart.eu/fhir/StructureDefinition/HFR-Echocardiograph"
            ]
          },
          "resourceType": "Observation",
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "imaging",
                  "display": "Imaging"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "34552-0",
                "display": "Cardiac 2D echo panel",
                "@sliceName": "loincCode"
              }
            ]
          },
          "effectiveDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
          "component": [
            {
              "code": {
                "coding": [
                  {
                    "system": "http://loinc.org",
                    "code": "8806-2",
                    "display": "Left ventricular Ejection fraction by 2D echo"
                  }
                ]
              },
              "valueQuantity": {
                "system": "http://unitsofmeasure.org",
                "code": "%",
                "value": "{{mpp:getConcept(%ejectionFractionMap, medcodeid, 'rounding_ef_value').nav:orElse(0.65).toDecimal() * 100}}",
                "unit": "%"
              },
              "@sliceName": "echoParameter"
            }
          ],
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
          "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
          "status": "final"
        }
      }
    },
    {
      "description": "AI4HF Smoking Status Resource",
      "precondition": {
        "name": "isSmokingStatus",
        "language": "text/fhirpath",
        "expression": " %smokingStatus.exists() and patid.exists() and obsdate.exists() and obsid.exists()"
      },
      "expression": {
        "name": "smoking_status",
        "language": "application/fhir-template+json",
        "value": {
          "id": "{{mpp:getHashedId('Observation', obsid)}}",
          "meta": {
            "profile": [
              "https://datatools4heart.eu/fhir/StructureDefinition/HFR-SmokingStatus"
            ]
          },
          "resourceType": "Observation",
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
          "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
          "effectivePeriod": {
            "start": "{{obsdate.utl:toFhirDateTime('dd/MM/yyyy')}}"
          },
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "social-history",
                  "display": "Social History"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "72166-2",
                "display": "Tobacco smoking status",
                "@sliceName": "loincCode"
              }
            ]
          },
          "valueCodeableConcept": {
            "coding": [
              {
                "system": "http://snomed.info/sct",
                "code": "{{ %smokingStatus.target_code }}",
                "display": "{{ %smokingStatus.target_name }}"
              }
            ]
          },
          "identifier": [
            {
              "value": "{{ obsid }}"
            }
          ],
          "status": "final"
        }
      }
    },
    {
      "description": "AI4HF Vital Sign Resource",
      "precondition": {
        "name": "isVitalSign",
        "language": "text/fhirpath",
        "expression": " %vitalSignCode.exists() and obsdate.exists() and value.exists() and patid.exists() and obsid.exists()"
      },
      "expression": {
        "name": "vitalsign",
        "language": "application/fhir-template+json",
        "value": {
          "id": "{{mpp:getHashedId('Observation', obsid)}}",
          "meta": {
            "profile": [
              "https://datatools4heart.eu/fhir/StructureDefinition/HFR-VitalSign"
            ]
          },
          "resourceType": "Observation",
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "vital-signs",
                  "display": "Vital Signs"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "{{ %vitalSignCode.target_code }}",
                "display": "{{ %vitalSignCode.target_name }}",
                "@sliceName": "loincCode"
              }
            ]
          },
          "effectiveDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
          "valueQuantity": {
            "system": "http://unitsofmeasure.org",
            "code": "{{ %vitalSignCode.target_unit }}",
            "value": "{{ value }}",
            "unit": "{{ %vitalSignCode.target_unit }}"
          },
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
          "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
          "identifier": [
            {
              "value": "{{ obsid }}"
            }
          ],
          "status": "final"
        }
      }
    },
    {
      "description": "AI4HF Lab Result Resource",
      "precondition": {
        "name": "isLabResult",
        "language": "text/fhirpath",
        "expression": " %labResultCodes.exists() and obsdate.exists() and value.exists() and patid.exists() and obsid.exists()"
      },
      "expression": {
        "name": "lab_result",
        "language": "application/fhir-template+json",
        "value": {
          "{{#labResultCode}}": "{{%labResultCodes}}",
          "{{*}}": {
            "id": "{{mpp:getHashedId('Observation', obsid & %labResultCode.target_code)}}",
            "meta": {
              "profile": [
                "https://datatools4heart.eu/fhir/StructureDefinition/HFR-LabResult"
              ]
            },
            "resourceType": "Observation",
            "status": "final",
            "category": [
              {
                "coding": [
                  {
                    "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                    "code": "laboratory",
                    "display": "Laboratory"
                  }
                ]
              }
            ],
            "code": {
              "coding": [
                {
                  "system": "http://loinc.org",
                  "code": "{{ %labResultCode.target_code }}",
                  "display": "{{ %labResultCode.target_name }}",
                  "@sliceName": "loincCode"
                }
              ]
            },
            "effectiveDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
            "valueQuantity": {
              "system": "http://unitsofmeasure.org",
              "code": "{{ %labResultCode.target_unit }}",
              "unit": "{{ %labResultCode.target_unit }}",
              "value": "{{ value }}"
            },
            "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
            "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
            "identifier": [
              {
                "value": "{{ obsid }}"
              }
            ],
            "referenceRange": [
              {
                "low": {
                  "value": "{{? numrangelow }}"
                },
                "high": {
                  "value": "{{? numrangehigh }}"
                }
              }
            ],
            "derivedFrom": "{{* mpp:createFhirReferenceWithHashedId('Observation', parentobsid)}}"
          }
        }
      }
    },
    {
      "description": "AI4HF NYHA Resource",
      "precondition": {
        "name": "isNyhaCode",
        "language": "text/fhirpath",
        "expression": " %nyhaCode.exists() and obsdate.exists() and patid.exists() and obsid.exists()"
      },
      "expression": {
        "name": "nyha",
        "language": "application/fhir-template+json",
        "value": {
          "id": "{{mpp:getHashedId('Observation', obsid)}}",
          "meta": {
            "profile": [
              "https://datatools4heart.eu/fhir/StructureDefinition/HFR-NYHAAssessment"
            ]
          },
          "resourceType": "Observation",
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "exam",
                  "display": "Exam"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "88020-3",
                "display": "Functional capacity NYHA",
                "@sliceName": "loincCode"
              }
            ]
          },
          "effectiveDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
          "valueCodeableConcept": {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "{{ %nyhaCode.target_code }}",
                "display": "{{ %nyhaCode.target_name }}"
              }
            ]
          },
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
          "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
          "identifier": [
            {
              "value": "{{ obsid }}"
            }
          ],
          "status": "final"
        }
      }
    },
    {
      "description": "AI4HF Symptom Resource",
      "precondition": {
        "name": "isSymptomCode",
        "language": "text/fhirpath",
        "expression": " %symptomCode.exists() and obsdate.exists() and patid.exists() and obsid.exists()"
      },
      "expression": {
        "name": "symptom",
        "language": "application/fhir-template+json",
        "value": {
          "id": "{{mpp:getHashedId('Observation', obsid)}}",
          "meta": {
            "profile": [
              "https://datatools4heart.eu/fhir/StructureDefinition/HFR-Symptom"
            ]
          },
          "resourceType": "Observation",
          "category": [
            {
              "coding": [
                {
                  "system": "http://terminology.hl7.org/CodeSystem/observation-category",
                  "code": "{{ %symptomCode.target_category }}",
                  "display": "{{ %symptomCode.target_category }}"
                }
              ]
            }
          ],
          "code": {
            "coding": [
              {
                "system": "http://snomed.info/sct",
                "code": "{{ %symptomCode.target_code }}",
                "display": "{{ %symptomCode.target_name }}",
                "@sliceName": "snomedCode"
              }
            ]
          },
          "effectiveDateTime": "{{ obsdate.utl:toFhirDateTime('dd/MM/yyyy') }}",
          "valueBoolean": true,
          "subject": "{{mpp:createFhirReferenceWithHashedId('Patient', patid)}}",
          "encounter": "{{? iif(%linkageEligibility.hes_e = 1,%encounter.select(iif($this.admidate <= %context.obsdate and $this.discharged >= %context.obsdate,mpp:createFhirReferenceWithHashedId('Encounter', ($this.patid + '-' + $this.spno)),{})).first(),{})}}",
          "identifier": [
            {
              "value": "{{ obsid }}"
            }
          ],
          "status": "final"
        }
      }
    }
  ]
}